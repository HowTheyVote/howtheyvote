name: Data

on:
  pull_request: {}
  workflow_dispatch: {}
  schedule:
    - cron: "0 0 1 * *" # every month on the 1st at 0:00

jobs:
  update:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    defaults:
      run:
        working-directory: ./backend

    env:
      # Make Python system packages (such as Xapian) accessible
      PYTHONPATH: /usr/lib/python3/dist-packages

    steps:
      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Install Xapian
        run: sudo apt-get -y -q install python3-xapian

      # Stopwords are included in the Alpine Xapian package, but for some reason they are not included
      # in the Ubuntu package. This downloads them from the same source as the Alpine package:
      # https://gitlab.alpinelinux.org/alpine/aports/-/blob/3.19-stable/community/xapian-core/APKBUILD#L12
      - name: Download stopwords
        working-directory: ${{ runner.temp }}
        run: |
          curl -o xapian-core-1.4.26.tar.xz https://oligarchy.co.uk/xapian/1.4.26/xapian-core-1.4.26.tar.xz
          tar -xf xapian-core-1.4.26.tar.xz
          mkdir -p /usr/share/xapian-core/stopwords
          cp xapian-core-1.4.26/languages/stopwords/english.list /usr/share/xapian-core/stopwords/english.list

      - name: Install poetry
        run: pipx install poetry==2.1.4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"
          cache: "poetry"
          cache-dependency-path: "./backend/poetry.lock"

      - name: Install dependencies
        run: poetry install

      - name: Update committees
        run: poetry run htv dev load-committees

      - name: Update countries
        run: poetry run htv dev load-countries

      - name: Update EuroVoc concepts
        run: poetry run htv dev load-eurovoc

      - name: Update political groups
        run: poetry run htv dev load-groups

      - name:
        if: always()
        run: |
          curl \
            --silent \
            --form-string "token=${{ secrets.PUSHOVER_API_TOKEN }}" \
            --form-string "user=${{ secrets.PUSHOVER_USER_KEY }}" \
            --form-string "message=Failed updating JSON reference datasets" \
            --form-string "url_title=Workflow run" \
            --form-string "url=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
            https://api.pushover.net/1/messages.json

      - name: Commit and push changes
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git fetch origin
          git checkout -b "bot/update-json-data"
          git add .
          git commit -m "Update JSON reference datasets"
          git push --force-with-lease origin bot/update-json-data

      - name: Open pull request
        run: |
          if gh pr view bot/update-json-data &>/dev/null; then
            echo "A pull request already exists. Skipping creation."
          else
            gh pr create \
              --title "Update JSON data" \
              --body "This pull request was opened automatically." \
              --head "bot/update-json-data" \
              --base main
          fi
        env:
          GH_TOKEN: ${{ github.token }}
